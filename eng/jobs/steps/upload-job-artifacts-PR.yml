parameters:
  name: ''

steps:
# Always upload test outputs and build logs.
- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testResultsFormat: 'xUnit'
    testResultsFiles: '*.xml'
    searchFolder: '$(Build.SourcesDirectory)/artifacts/TestResults/$(_BuildConfig)'
    mergeTestResults: true
    testRunTitle: ${{ parameters.name }}-$(_BuildConfig)
  continueOnError: true
  condition: always()

- task: CopyFiles@2
  displayName: Prepare BuildLogs staging directory
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      **/*.log
      **/*.binlog
    TargetFolder: '$(Build.StagingDirectory)/BuildLogs'
    CleanTargetFolder: true
  continueOnError: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: Publish BuildLogs
  inputs:
    PathtoPublish: '$(Build.StagingDirectory)/BuildLogs'
    ArtifactName: Logs-${{ parameters.name }}-$(_BuildConfig)
  continueOnError: true
  condition: succeededOrFailed()
